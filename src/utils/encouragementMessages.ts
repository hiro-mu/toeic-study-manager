import type { EncouragementMessage, MessageContext } from '@/types';

/**
 * Âä±„Åæ„Åó„É°„ÉÉ„Çª„Éº„Ç∏„ÅÆ„Éá„Éº„Çø„Éô„Éº„Çπ
 * Êßò„ÄÖ„Å™„Ç∑„ÉÅ„É•„Ç®„Éº„Ç∑„Éß„É≥„Å´ÂØæÂøú„Åó„Åü„É°„ÉÉ„Çª„Éº„Ç∏„ÇíÊèê‰æõ
 */
export const ENCOURAGEMENT_MESSAGES: EncouragementMessage[] = [
  // Êå®Êã∂„ÉªÈñãÂßãÊôÇ
  {
    id: 'greeting_001',
    text: '‰ªäÊó•„ÇÇTOEICÂ≠¶Áøí„ÇíÂßã„ÇÅ„Åæ„Åó„Çá„ÅÜÔºÅÁ∂ôÁ∂ö„ÅØÂäõ„Å™„Çä„Åß„Åô„ÄÇ',
    emoji: 'üåü',
    category: 'greeting',
    context: ['morning']
  },
  {
    id: 'greeting_002',
    text: '„ÅäÁñ≤„ÇåÊßò„Åß„ÅôÔºÅÂçàÂæå„ÅÆÂ≠¶Áøí„Çø„Ç§„É†„Åß„Åô„Å≠„ÄÇÈõÜ‰∏≠„Åó„Å¶„ÅÑ„Åç„Åæ„Åó„Çá„ÅÜÔºÅ',
    emoji: '‚òÄÔ∏è',
    category: 'greeting',
    context: ['afternoon']
  },
  {
    id: 'greeting_003',
    text: 'Â§ú„ÅÆÂ≠¶ÁøíÊôÇÈñì„Åß„Åô„Å≠„ÄÇ‰∏ÄÊó•„ÅÆÁ∑†„ÇÅ„Åè„Åè„Çä„Å´È†ëÂºµ„Çä„Åæ„Åó„Çá„ÅÜÔºÅ',
    emoji: 'üåô',
    category: 'greeting',
    context: ['evening']
  },

  // ÈÄ≤ÊçóÈÅîÊàêÊôÇ
  {
    id: 'progress_001',
    text: 'Á¥†Êô¥„Çâ„Åó„ÅÑÈÄ≤Êçó„Åß„ÅôÔºÅÁõÆÊ®ô„Çπ„Ç≥„Ç¢„Åæ„Åß„ÇÇ„ÅÜÂ∞ë„Åó„Åß„Åô„Å≠„ÄÇ',
    emoji: 'üéØ',
    category: 'progress',
    context: ['high_progress', 'near_goal']
  },
  {
    id: 'progress_002',
    text: 'ÁùÄÂÆü„Å´Âäõ„Çí‰ªò„Åë„Å¶„ÅÑ„Åæ„Åô„ÄÇ„Åì„ÅÆË™øÂ≠ê„ÅßÁ∂ö„Åë„Å¶„ÅÑ„Åç„Åæ„Åó„Çá„ÅÜÔºÅ',
    emoji: 'üìà',
    category: 'progress',
    context: ['high_progress']
  },
  {
    id: 'progress_003',
    text: '‰ªäÊó•„ÇÇÂ≠¶Áøí„ÇíÁ∂ôÁ∂ö„Åß„Åç„Åæ„Åó„Åü„ÄÇÊØéÊó•„ÅÆÁ©ç„ÅøÈáç„Å≠„ÅåÂ§ß„Åç„Å™ÊàêÊûú„Å´Áπã„Åå„Çä„Åæ„Åô„ÄÇ',
    emoji: 'üî•',
    category: 'progress',
    context: ['streak']
  },

  // „É¢„ÉÅ„Éô„Éº„Ç∑„Éß„É≥Âêë‰∏ä
  {
    id: 'motivation_001',
    text: 'TOEIC„Çπ„Ç≥„Ç¢„Ç¢„ÉÉ„Éó„ÅØ‰∏ÄÊó•„Å´„Åó„Å¶„Å™„Çâ„Åö„ÄÇ‰ªäÊó•„ÅÆÂä™Âäõ„ÅåÊòéÊó•„ÅÆÊàêÊûú„Å´„Å™„Çä„Åæ„ÅôÔºÅ',
    emoji: 'üí™',
    category: 'motivation',
    context: ['low_progress']
  },
  {
    id: 'motivation_002',
    text: 'Èõ£„Åó„ÅèÊÑü„Åò„Å¶„ÇÇÂ§ß‰∏àÂ§´„ÄÇÊåëÊà¶„Åô„Çã„Åì„Å®„ÅßÊàêÈï∑„Åß„Åç„Åæ„ÅôÔºÅ',
    emoji: 'üöÄ',
    category: 'motivation',
    context: ['low_progress']
  },
  {
    id: 'motivation_003',
    text: 'Â≠¶Áøí„ÅØÊäïË≥á„Åß„Åô„ÄÇ‰ªäÊó•„ÅÆÊôÇÈñì„ÅåÂ∞ÜÊù•„ÅÆÂèØËÉΩÊÄß„ÇíÂ∫É„Åí„Åæ„Åô„ÄÇ',
    emoji: 'üíé',
    category: 'motivation',
    context: []
  },

  // „Çø„Çπ„ÇØÂÆå‰∫ÜÊôÇ
  {
    id: 'completion_001',
    text: '„Çø„Çπ„ÇØÂÆå‰∫Ü„Åä„ÇÅ„Åß„Å®„ÅÜ„Åî„Åñ„ÅÑ„Åæ„ÅôÔºÅ‰∏ÄÊ≠©„Åö„Å§ÂâçÈÄ≤„Åó„Å¶„ÅÑ„Åæ„Åô„Å≠„ÄÇ',
    emoji: '‚úÖ',
    category: 'completion',
    context: []
  },
  {
    id: 'completion_002',
    text: '„Çà„Åè„Åß„Åç„Åæ„Åó„ÅüÔºÅ‰ªäÊó•„ÅÆÂ≠¶ÁøíÊàêÊûú„ÇíÂÆüÊÑü„Åó„Å¶„ÅÑ„Åæ„Åô„ÅãÔºü',
    emoji: 'üéâ',
    category: 'completion',
    context: []
  },
  {
    id: 'completion_003',
    text: 'Á¥†Êô¥„Çâ„Åó„ÅÑÈõÜ‰∏≠Âäõ„Åß„Åó„Åü„ÄÇ„Åì„ÅÆÂã¢„ÅÑ„Çí‰øù„Å°„Åæ„Åó„Çá„ÅÜÔºÅ',
    emoji: '‚≠ê',
    category: 'completion',
    context: []
  },

  // ÁõÆÊ®ôË®≠ÂÆöÊôÇ
  {
    id: 'goal_001',
    text: 'ÁõÆÊ®ô„Çπ„Ç≥„Ç¢„ÇíË®≠ÂÆö„Åó„Åæ„Åó„Åü„Å≠ÔºÅÊòéÁ¢∫„Å™ÁõÆÊ®ô„ÅØÊàêÂäü„Å∏„ÅÆÁ¨¨‰∏ÄÊ≠©„Åß„Åô„ÄÇ',
    emoji: 'üéØ',
    category: 'goal',
    context: []
  },
  {
    id: 'goal_002',
    text: 'È´ò„ÅÑÁõÆÊ®ô„ÇíÊé≤„Åí„Åæ„Åó„Åü„Å≠„ÄÇ„ÉÅ„É£„É¨„É≥„Ç∏Á≤æÁ•û„ÅåÁ¥†Êô¥„Çâ„Åó„ÅÑ„Åß„ÅôÔºÅ',
    emoji: 'üèÜ',
    category: 'goal',
    context: []
  },

  // Êó•Â∏∏ÁöÑ„Å™Âä±„Åæ„Åó
  {
    id: 'daily_001',
    text: '‰ªäÊó•„ÇÇÂ≠¶Áøí„Å´Âèñ„ÇäÁµÑ„ÇÄÂßøÂã¢„ÅåÁ´ãÊ¥æ„Åß„Åô„ÄÇÁ∂ôÁ∂ö„ÅØÊúÄÂ§ß„ÅÆÊ≠¶Âô®„Åß„ÅôÔºÅ',
    emoji: 'üìö',
    category: 'daily',
    context: []
  },
  {
    id: 'daily_002',
    text: 'Â∞è„Åï„Å™Âä™Âäõ„ÇÇÁ©ç„ÅøÈáç„Å≠„Çå„Å∞Â§ß„Åç„Å™ÊàêÊûú„Å´„Å™„Çä„Åæ„Åô„ÄÇÈ†ëÂºµ„Å£„Å¶ÔºÅ',
    emoji: 'üå±',
    category: 'daily',
    context: []
  },
  {
    id: 'daily_003',
    text: 'Â≠¶ÁøíÁøíÊÖ£„ÅåË∫´„Å´„Å§„ÅÑ„Å¶„ÅÑ„Åæ„Åô„Å≠„ÄÇÁ¥†Êô¥„Çâ„Åó„ÅÑÁ∂ôÁ∂öÂäõ„Åß„ÅôÔºÅ',
    emoji: 'üí´',
    category: 'daily',
    context: ['streak']
  },

  // ÊåëÊà¶„ÉªÈõ£„Åó„ÅÑÊôÇ
  {
    id: 'challenge_001',
    text: 'Âõ∞Èõ£„ÅØÊàêÈï∑„ÅÆ„ÉÅ„É£„É≥„Çπ„ÄÇ‰ªä„ÅÆÈ†ëÂºµ„Çä„ÅåÂøÖ„ÅöÂ†±„Çè„Çå„Åæ„ÅôÔºÅ',
    emoji: 'üî•',
    category: 'challenge',
    context: ['low_progress']
  },
  {
    id: 'challenge_002',
    text: 'Ë´¶„ÇÅ„Åö„Å´Á∂ö„Åë„Çã„Åì„Å®„ÅåÊàêÂäü„ÅÆÁßòË®£„Åß„Åô„ÄÇÂøúÊè¥„Åó„Å¶„ÅÑ„Åæ„ÅôÔºÅ',
    emoji: 'üí™',
    category: 'challenge',
    context: ['low_progress']
  },
  {
    id: 'challenge_003',
    text: '‰ªäÊó•„ÅÆÂ≠¶Áøí„ÅåÊòéÊó•„ÅÆËá™‰ø°„Å´Áπã„Åå„Çä„Åæ„Åô„ÄÇ‰∏ÄÊ≠©„Åö„Å§ÈÄ≤„Åø„Åæ„Åó„Çá„ÅÜÔºÅ',
    emoji: 'üåü',
    category: 'challenge',
    context: []
  }
];

/**
 * ÁèæÂú®„ÅÆÁä∂Ê≥Å„Å´ÈÅ©„Åó„Åü„É°„ÉÉ„Çª„Éº„Ç∏„Ç≥„É≥„ÉÜ„Ç≠„Çπ„Éà„ÇíÂà§ÂÆö
 */
export function getCurrentContext(options: {
  completionRate: number;
  totalTasks: number;
  completedTasks: number;
  hasGoal: boolean;
  timeOfDay?: 'morning' | 'afternoon' | 'evening';
}): MessageContext[] {
  const { completionRate, completedTasks, hasGoal, timeOfDay } = options;
  const contexts: MessageContext[] = [];

  // ÊôÇÈñìÂ∏Ø
  if (timeOfDay) {
    contexts.push(timeOfDay);
  }

  // ÈÄ≤ÊçóÁéá„Å´„Çà„ÇãÂà§ÂÆö
  if (completionRate >= 80) {
    contexts.push('high_progress');
  } else if (completionRate <= 30) {
    contexts.push('low_progress');
  }

  // ÂàùÂõû„Çø„Çπ„ÇØ
  if (completedTasks === 1) {
    contexts.push('first_task');
  }

  // ÈÄ£Á∂öÂ≠¶ÁøíÔºà‰æã: 3Êó•‰ª•‰∏äÁ∂ôÁ∂öÔºâ
  if (completedTasks >= 3) {
    contexts.push('streak');
  }

  // ÁõÆÊ®ô„Å´Ëøë„ÅÑÔºà90%‰ª•‰∏äÔºâ
  if (hasGoal && completionRate >= 90) {
    contexts.push('near_goal');
  }

  return contexts;
}

/**
 * ÊôÇÈñìÂ∏Ø„ÇíÂèñÂæó
 */
export function getTimeOfDay(): 'morning' | 'afternoon' | 'evening' {
  const hour = new Date().getHours();

  if (hour >= 6 && hour < 12) {
    return 'morning';
  } else if (hour >= 12 && hour < 18) {
    return 'afternoon';
  } else {
    return 'evening';
  }
}

/**
 * „Ç≥„É≥„ÉÜ„Ç≠„Çπ„Éà„Å´ÈÅ©„Åó„Åü„É°„ÉÉ„Çª„Éº„Ç∏„Çí„É©„É≥„ÉÄ„É†„Å´ÈÅ∏Êäû
 */
export function getRandomEncouragementMessage(
  contexts: MessageContext[] = [],
  excludeRecentIds: string[] = []
): EncouragementMessage {
  // „Ç≥„É≥„ÉÜ„Ç≠„Çπ„Éà„Å´ÈÅ©Âêà„Åô„Çã„É°„ÉÉ„Çª„Éº„Ç∏„Çí„Éï„Ç£„É´„Çø„É™„É≥„Ç∞
  let filteredMessages = ENCOURAGEMENT_MESSAGES.filter(message => {
    // ÊúÄËøëË°®Á§∫„Åï„Çå„Åü„É°„ÉÉ„Çª„Éº„Ç∏„ÇíÈô§Â§ñ
    if (excludeRecentIds.includes(message.id)) {
      return false;
    }

    // „Ç≥„É≥„ÉÜ„Ç≠„Çπ„Éà„ÅåÊåáÂÆö„Åï„Çå„Å¶„ÅÑ„Å™„ÅÑÂ†¥Âêà„ÄÅ„Åô„Åπ„Å¶„ÅÆ„É°„ÉÉ„Çª„Éº„Ç∏„ÅåÂØæË±°
    if (contexts.length === 0) {
      return true;
    }

    // „É°„ÉÉ„Çª„Éº„Ç∏„ÅÆ„Ç≥„É≥„ÉÜ„Ç≠„Çπ„Éà„ÅåÁ©∫„ÅÆÂ†¥Âêà„ÄÅÊ±éÁî®„É°„ÉÉ„Çª„Éº„Ç∏„Å®„Åó„Å¶‰ΩøÁî®
    if (message.context.length === 0) {
      return true;
    }

    // „Ç≥„É≥„ÉÜ„Ç≠„Çπ„Éà„Åå‰∏ÄËá¥„Åô„Çã„Åã„ÉÅ„Çß„ÉÉ„ÇØ
    return message.context.some(ctx => contexts.includes(ctx));
  });

  // ÈÅ©Âêà„Åô„Çã„É°„ÉÉ„Çª„Éº„Ç∏„Åå„Å™„ÅÑÂ†¥Âêà„ÄÅÊ±éÁî®„É°„ÉÉ„Çª„Éº„Ç∏„Çí‰ΩøÁî®
  if (filteredMessages.length === 0) {
    filteredMessages = ENCOURAGEMENT_MESSAGES.filter(
      message => message.context.length === 0 && !excludeRecentIds.includes(message.id)
    );
  }

  // „Åù„Çå„Åß„ÇÇ„Å™„ÅÑÂ†¥Âêà„ÄÅÂÖ®„É°„ÉÉ„Çª„Éº„Ç∏„Åã„ÇâÈÅ∏Êäû
  if (filteredMessages.length === 0) {
    filteredMessages = ENCOURAGEMENT_MESSAGES.filter(
      message => !excludeRecentIds.includes(message.id)
    );
  }

  // ÊúÄÁµÇÁöÑ„Å´ÈÅ∏ÊäûËÇ¢„Åå„Å™„ÅÑÂ†¥Âêà„ÄÅÊúÄÂàù„ÅÆ„É°„ÉÉ„Çª„Éº„Ç∏„ÇíËøî„Åô
  if (filteredMessages.length === 0) {
    return ENCOURAGEMENT_MESSAGES[0];
  }

  // „É©„É≥„ÉÄ„É†„Å´ÈÅ∏Êäû
  const randomIndex = Math.floor(Math.random() * filteredMessages.length);
  return filteredMessages[randomIndex];
}

/**
 * Ë°®Á§∫Â±•Ê≠¥„ÅÆÁÆ°ÁêÜÔºàLocalStorage‰ΩøÁî®Ôºâ
 */
export class MessageHistoryManager {
  private static readonly STORAGE_KEY = 'encouragement_message_history';
  private static readonly MAX_HISTORY = 10; // ÊúÄÂ§ßÂ±•Ê≠¥Êï∞

  static getRecentIds(): string[] {
    try {
      const history = localStorage.getItem(this.STORAGE_KEY);
      return history ? JSON.parse(history) : [];
    } catch {
      return [];
    }
  }

  static addToHistory(messageId: string): void {
    try {
      const history = this.getRecentIds();
      const updatedHistory = [messageId, ...history.filter(id => id !== messageId)]
        .slice(0, this.MAX_HISTORY);

      localStorage.setItem(this.STORAGE_KEY, JSON.stringify(updatedHistory));
    } catch (error) {
      console.warn('Failed to update message history:', error);
    }
  }

  static clearHistory(): void {
    try {
      localStorage.removeItem(this.STORAGE_KEY);
    } catch (error) {
      console.warn('Failed to clear message history:', error);
    }
  }
}

/**
 * „É°„Ç§„É≥„ÅÆÂä±„Åæ„Åó„É°„ÉÉ„Çª„Éº„Ç∏ÂèñÂæóÈñ¢Êï∞
 */
export function getEncouragementMessage(options: {
  completionRate: number;
  totalTasks: number;
  completedTasks: number;
  hasGoal: boolean;
}): EncouragementMessage {
  const timeOfDay = getTimeOfDay();
  const contexts = getCurrentContext({ ...options, timeOfDay });
  const recentIds = MessageHistoryManager.getRecentIds();

  const message = getRandomEncouragementMessage(contexts, recentIds);
  MessageHistoryManager.addToHistory(message.id);

  return message;
}
